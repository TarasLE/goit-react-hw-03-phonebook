{"version":3,"sources":["App.module.css","components/Contactform/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Contactform/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","handleSubmit","preventDefault","checkContact","contact","id","shortid","generate","props","addContact","clearInput","contacts","length","find","toLowerCase","alertState","sameContact","this","className","styles","Container","type","onChange","FormInput","onClick","FormBtn","Notification","Component","defaultProps","ContactList","deleteContact","map","Contact","ContactInfo","DeleteBtn","Filter","filter","InputContainer","FilterHeader","FilterInput","App","contactId","prevState","contactFilter","prevProps","console","log","localStorage","setItem","JSON","stringify","localContacts","getItem","parsedLocalContacts","parse","normalizedFilter","filteredElements","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d3462abc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__1c67V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__2yyzQ\",\"InputName\":\"ContactForm_InputName__1zL6t\",\"Notification\":\"ContactForm_Notification__252Z9\",\"FormInput\":\"ContactForm_FormInput__8eRQK\",\"FormBtn\":\"ContactForm_FormBtn__3tBuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__1hhZA\",\"Contact\":\"ContactList_Contact__x03ao\",\"DeleteBtn\":\"ContactList_DeleteBtn__3OYrX\",\"ContactInfo\":\"ContactList_ContactInfo__3sfOl\"};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport { Notification } from 'react-pnotify'\r\n\r\nexport default class ContactForm extends Component {\r\n    static defaultProps = { addContact: '' }\r\n    static propTypes = {}\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.addContact(contact)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (this.props.contacts.length == 0) {\r\n            return\r\n        } else if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() === this.state.name.toLowerCase()\r\n                )\r\n            })\r\n        ) {\r\n            this.setState({ alert: true })\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        this.setState({ alert: false })\r\n    }\r\n\r\n    render() {\r\n        const sameContact = this.state.name\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.handleSubmit}\r\n                    className={styles.FormBtn}\r\n                >\r\n                    Add contact\r\n                </button>\r\n                {this.state.alert && (\r\n                    <div className={styles.Notification}>\r\n                        <h2>{sameContact} is already in contacts</h2>\r\n                        <h3>Please check name and try again</h3>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.alertState}\r\n                            className={styles.FormBtn}\r\n                        >\r\n                            Close Notification\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\n\r\nexport default function ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <ul>\r\n                {contacts.map((contact) => (\r\n                    <li key={contact.id} className={styles.Contact}>\r\n                        <span className={styles.ContactInfo}>\r\n                            {contact.name} : {contact.number}\r\n                        </span>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => deleteContact(contact.id)}\r\n                            className={styles.DeleteBtn}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Filter.module.css'\r\n\r\nexport default function Filter({ value, filter }) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <label className={styles.InputContainer}>\r\n                <span className={styles.FilterHeader}>\r\n                    Find contacts by Name\r\n                </span>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={filter}\r\n                    className={styles.FilterInput}\r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n}\r\n","import React, { Component } from 'react'\nimport ContactForm from './components/Contactform/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport styles from './App.module.css'\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n    deleteContact = (contactId) => {\n        this.setState((prevState) => ({\n            contacts: prevState.contacts.filter(\n                (contact) => contact.id != contactId\n            ),\n        }))\n    }\n\n    addContact = (contact) => {\n        this.setState((prevState) => ({\n            contacts: [contact, ...prevState.contacts],\n        }))\n    }\n    componentDidUpdate(prevProps, prevState) {\n        console.log('PREVSTATE')\n        console.log(prevState)\n        console.log('THISSTATE')\n        console.log(this.state)\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts)\n            )\n        }\n    }\n\n    componentDidMount() {\n        const localContacts = localStorage.getItem('contacts')\n        const parsedLocalContacts = JSON.parse(localContacts)\n        if (parsedLocalContacts) {\n            this.setState({ contacts: parsedLocalContacts })\n        }\n    }\n\n    contactFilter = (event) => {\n        this.setState({ filter: event.currentTarget.value })\n    }\n\n    render() {\n        const normalizedFilter = this.state.filter.toLowerCase()\n        const filteredElements = this.state.contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        return (\n            <div className={styles.Container}>\n                <h1>Phonebook</h1>\n\n                <ContactForm\n                    addContact={this.addContact}\n                    contacts={this.state.contacts}\n                />\n                <h1>Contacts</h1>\n                <Filter value={this.state.filter} filter={this.contactFilter} />\n                <ContactList\n                    contacts={filteredElements}\n                    deleteContact={this.deleteContact}\n                />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__2C1Vn\",\"InputContainer\":\"Filter_InputContainer__1y-In\",\"FilterInput\":\"Filter_FilterInput__YMHiJ\",\"FilterHeader\":\"Filter_FilterHeader__2EXM0\"};"],"sourceRoot":""}